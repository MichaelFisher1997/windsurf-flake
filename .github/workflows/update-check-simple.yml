name: Check for Windsurf Updates (Simple)

on:
  schedule:
    # Run daily at 9:00 UTC
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Get current version
        id: current
        run: |
          current_version=$(grep -oP 'version = "\K[^"]*' flake.nix)
          echo "version=$current_version" >> $GITHUB_OUTPUT
          echo "Current version: $current_version"

      - name: Try common version increments
        id: next-version
        run: |
          current="${{ steps.current.outputs.version }}"
          # Extract major.minor.patch
          IFS='.' read -ra VERSION_PARTS <<< "$current"
          major="${VERSION_PARTS[0]}"
          minor="${VERSION_PARTS[1]}"
          patch="${VERSION_PARTS[2]}"
          
          # Try incrementing patch version first
          next_patch=$((patch + 1))
          test_version="$major.$minor.$next_patch"
          
          echo "test_version=$test_version" >> $GITHUB_OUTPUT
          echo "Testing version: $test_version"

      - name: Test if new version exists
        id: test-version
        run: |
          test_version="${{ steps.next-version.outputs.test_version }}"
          
          # Try to download the new version to see if it exists
          test_url="https://windsurf-stable.codeiumdata.com/linux-x64/stable/latest/Windsurf-linux-x64-$test_version.tar.gz"
          
          if curl --output /dev/null --silent --head --fail "$test_url"; then
            echo "version_exists=true" >> $GITHUB_OUTPUT
            echo "url=$test_url" >> $GITHUB_OUTPUT
            echo "Found new version: $test_version"
          else
            echo "version_exists=false" >> $GITHUB_OUTPUT
            echo "No new version found at: $test_url"
          fi

      - name: Update flake.nix if new version exists
        if: steps.test-version.outputs.version_exists == 'true'
        run: |
          test_version="${{ steps.next-version.outputs.test_version }}"
          test_url="${{ steps.test-version.outputs.url }}"
          
          # Update version and URL in flake.nix
          sed -i "s/version = \"[^\"]*\"/version = \"$test_version\"/" flake.nix
          sed -i "s|url = \"[^\"]*\"|url = \"$test_url\"|" flake.nix
          
          # Clear the hash to let Nix calculate it
          sed -i 's/sha256 = "[^"]*"/sha256 = ""/' flake.nix
          
          echo "Updated flake.nix to version $test_version"

      - name: Get correct hash
        if: steps.test-version.outputs.version_exists == 'true'
        run: |
          # Try to build to get the correct hash
          nix build 2>&1 | tee build.log
          correct_hash=$(grep "got:" build.log | grep -oP 'sha256-\K[^=]+' | head -1)
          
          if [ -n "$correct_hash" ]; then
            sed -i "s/sha256 = \"\"/sha256 = \"$correct_hash\"/" flake.nix
            echo "Updated hash to: $correct_hash"
          else
            echo "Failed to get correct hash"
            cat build.log
            exit 1
          fi

      - name: Verify build
        if: steps.test-version.outputs.version_exists == 'true'
        run: |
          nix build

      - name: Create Pull Request
        if: steps.test-version.outputs.version_exists == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "UPDATE: ${{ steps.next-version.outputs.test_version }}"
          title: "Update Windsurf to ${{ steps.next-version.outputs.test_version }}"
          body: |
            Automated update to Windsurf version ${{ steps.next-version.outputs.test_version }}
            
            **Changes:**
            - Updated version from ${{ steps.current.outputs.version }} to ${{ steps.next-version.outputs.test_version }}
            - Updated download URL
            - Updated package hash
            
            This PR was created automatically by the daily update check workflow.
          branch: update-windsurf-${{ steps.next-version.outputs.test_version }}
          delete-branch: true